[tool.poetry]
name = "chatgpt_detection"
version = "0.1.0"
description = "ChatGPT Detection Materials"
authors = ["PBG"]
license = "MIT"
readme = "README.md"
homepage = ""
repository = ""
documentation = ""

keywords = ["Base","Project","Template"]

[tool.poetry.dependencies]
python = ">=3.9, !=3.9.7, <3.11"
ecs-logging = "^2.0.0"
loguru = "^0.6.0"
openai = "^0.27.4"
psycopg2-binary = "^2.9.1"
pyaml = "^21.8.3"
pydantic = "^1.9.0"
pytest = "^7.2.0"
python-dotenv = "^0.21.0"
rich = "^13.3.4"
typer = "^0.7.0"
unidecode = "^1.3.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
autoflake = "^1.3.1"
autopep8 = "^1.5.7"
bandit = "^1.7.0"
black = "^22"
commitizen = "^2.20.0"
flake8 = "^5"
flake8-bandit = "^4"
flake8-builtins = "^1.5.3"
flake8-isort = "^4.0.0"
ipython = "^7.28"
jupyter = "^1.0.0"
locust = "^2.14.2"
pre-commit = "^3.0.2"
pylint = "^2.8.2"
pytest-cov = "^2.8.1"

[build-system]
requires = ["poetry-core>=1.3"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "pypi.org"
url = "https://pypi.org/simple"
default = true


[tool.pytest.ini_options]
markers = [
    "db: mark test for db functionalities",
    "app: all about the app",
    "api: all about the api",
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120
profile = "black"

[tool.black]
line-length = 120
target-version = ['py39']
preview = true

[tool.coverage.run]
branch = true
source = ["app"]

[tool.flake8]
max-line-length = 120
exclude = [".venv", "docs", ".vscode", "pychache", ".git","__pycache__","__init__.py",".mypy_cache",".pytest_cache", "alembic"]
ignore = ["E501", "W503", "E226", "E203", "W503", "W293", "I004", "E266", "W391", "W292", "I001", "S101", "I003", "I005", "A002", "A003", "S608", "W605", "S303", "B303"]

[tool.mypy]
# files = [""]
plugins = ["pydantic.mypy", "sqlmypy"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = ['volumes/', "alembic/", "scripts/", "docs/", "settings/", ".vscode/", ".venv/", ".pytest_cache/", ".mypy_cache/", ".gitlab/", ".github/", ".devcontainer/", "Docker/", "dashboards/"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$major.$minor.$patch$prerelease"
version = "0.1.0"
version_files = [
    "__version__.py",
    "pyproject.toml:version"
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]

[tool.ruff]
line-length = 120
format      = "grouped"
# Assume Python 3.9.
target-version = "py39"
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "A",
    # "ANN",
    "ARG",
    "B",
    "BLE",
    "C",
    "C4",
    "C90",
    "D",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "Q",
    "RET",
    "RUF",
    "S",
    "SIM",
    "T",
    "T10",
    "T20",
    "TID",
    "UP",
    "W",
    "YTT",]
# Never enforce `E501` (line length violations).
ignore = ["BLE001", "D203", "D213", "D417", "E501"]
# Always autofix, but never try to fix `F401` (unused imports).
fix     = true
unfixable = ["F401"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# # Exclude a variety of commonly ignored directories (you can have some problems)
# exclude = [
#     ".direnv",
#     ".eggs",
#     ".git",
#     ".hg",
#     ".mypy_cache",
#     ".nox",
#     ".pants.d",
#     ".ruff_cache",
#     ".svn",
#     ".tox",
#     ".venv",
#     "__pypackages__",
#     "_build",
#     "buck-out",
#     "build",
#     "dist",
#     "node_modules",
#     "venv",
# ]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104"]
"test*.py"    = ["S101", "T201"]